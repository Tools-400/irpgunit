- <!--  * =====================================================================
 *   This Ant script helps you to create an upload the project's 
 *   update site. Before you can run the script, you need to copy
 *   'template_ftp.properties' to 'ftp.properties' and change the
 *   properties to meet your needs.
 *
 *   In order to use all features of the script, you need to
 *   have the 'iSphere Ant Plugin' installed and the 'iSphere Help Builder'
 *   project in your workspace.
 *
 *   The main switches to control the build process are:
 *
 *     build.version       - project version number
 *     build.help.enabled  - specifies whether to build the help pages
 *     build.dryrun        - specifies whether to apply changes to GitHub
 *
 *   See also: build.properties
 *
 *   Setup the el tools configuration:
 *
 *     1 JRE
 *     1.1 Select option "Run in the same JRE as the workspace".
 *
 *     2 Classpath
 *     2.1 Add the following jars from [iRPGUnit Build]/build/lib:
 *         - org.hamcrest.core_1.1.0.v20090501071000.jar
 *         - junit.jar
 *         - jsch-0.1.55.jar
 *         - commons-net-3.3-patched.jar
 *         - ant-contrib-1.0b3.jar
 *
 *   Here are the steps to create a new version of the plug-in:
 *
 *     1 Preparation
 *     1.1 On the PC run the 'CheckNLSMessages' JUnit test to check
 *         for missing or obsolete message property entries.
 *     1.2 On the PC search java sources for missing copyright header.
 *         Menu: Search -> File -> (?s)\A((?!copyright).)*\Z
 *               Check: Regular expression
 *     1.3 On the PC change version number in COPYRIGHT.RPGLE.
 *     1.4 On the PC push changes of project's i Project to the AS/400.
 *     1.5 On the PC update document 'iRPGUnit.doc' and also save it as 
 *         'iRPGUnit for RDi 9.5.1.3+.pdf'.
 *     1.6 Refresh project 'iRPGUnit Core Plugin'.
 *     1.7 On the PC increment version number of property 'build.version'
 *         in file 'build.properties'.
 *
 *     2 Creating the library
 *     2.1 On the IBM i run the following commands:
 *
 *           ADDLIBLE LIB(RPGUNITDVP)
 *
 *           CRTBNDCL PGM(RPGUNITDVP/A_CRTPKG) 
 *             SRCFILE(RPGUNITDVP/QBUILD) 
 *             DFTACTGRP(*NO) ACTGRP(*NEW) DBGVIEW(*LIST)
 *
 *           CALL PGM(A_CRTPKG) PARM('RPGUNITDVP')
 *
 *     2.2 Run target 'downloadIBMiLibrary' of build.xml.
 *
 *     3 Creating the update site
 *     3.1 On the PC run target 'build' of file 'build.xml'.
 *     3.2 Right-click 'site.xml', select 'PDE Tools -> Build Site'.
 *     3.3 On the PC run target 'createGitHubFiles' of file 'build.xml'.
 *     3.4 On the PC run target 'uploadGitHubFiles' of file 'build.xml'.
 *     3.5 Check-in source code.
 *     3.6 Create version tag, e.g.: v002.004.001.r
 *
 * ===================================================================== 
  --> 
- <project name="iRPGUnit Build" default="build" basedir=".">
- <!--  Include Ant Contrib tasks 
  --> 
- <taskdef resource="net/sf/antcontrib/antlib.xml">
- <classpath>
  <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar" /> 
  </classpath>
  </taskdef>
  <property name="plugin.name" value="${build.public.project.name}" /> 
  <property name="workspace.home" location="./../../../.." /> 
- <!--  Load project names and new version number 
  --> 
  <property file="build.properties" /> 
- <!--  Load ftp user name and password 
  --> 
  <property file="ftp.properties" /> 
- <!--  Load IBM i FTP user name and password 
  --> 
- <if>
  <available file="ftp-credentials.properties" /> 
- <then>
  <property file="ftp-credentials.properties" /> 
  </then>
- <else>
  <echo>File 'ftp-credentials.properties' not found.</echo> 
  <echo>Copy 'ftp-credentials_template.properties' to 'ftp-credentials.properties' and set the user names only (recommended).</echo> 
  <fail message="Ant script stopped." /> 
  </else>
  </if>
- <!--  Set date and time 
  --> 
- <tstamp>
  <format property="today.timestamp" pattern="dd.MM.yyyy - kk:mm:ss" locale="de,DE" /> 
  <format property="today.date.eur" pattern="dd.MM.yyyy" locale="de,DE" /> 
  <format property="today.date.iso" pattern="yyyy-MM-dd" locale="de,DE" /> 
  <format property="today.year" pattern="yyyy" locale="de,DE" /> 
  </tstamp>
- <!--  Set local FTP properties 
  --> 
  <property name="local.download.directory" location="${basedir}/temp-downloads" /> 
  <property name="local.savefile.name" value="${IBMi.ftp.savefile.name}" /> 
  <property name="local.savefile.directory" location="${workspace.home}/${build.project.core}/Server" /> 
- <!--  Set update site properties 
  --> 
  <property name="site.dir" location="${workspace.home}/${build.updatesite}" /> 
  <property name="site.features.dir" location="${site.dir}/features" /> 
  <property name="site.plugins.dir" location="${site.dir}/plugins" /> 
- <!--  Set temp directories 
  --> 
  <property name="temp.dir" location="${basedir}/temp" /> 
  <property name="temp.dir.local_updatesite" location="${temp.dir}/local_updatesite" /> 
- <!--  Target IDE 
  --> 
- <if>
  <equals arg1="${build.target}" arg2="RDi" /> 
- <then>
  <property name="do.copy.site.xml" value="false" /> 
  </then>
- <else>
  <property name="do.copy.site.xml" value="true" /> 
  </else>
  </if>
- <!--  Set regular expressions and replacement values 
  --> 
  <property name="version.number.validation.regex" value="[1-9]+\.[0-9]+(?:\.[0-9]+)?(?:\.(?:(b)[0-9]{3}|(r)[0-9]{0,1}))?" /> 
  <property name="version.number.search.regex" value="[1-9]+\.[0-9]+(?:\.[0-9]+)?(?:\.(?:b[0-9]{1,3}|r[0-9]{0,1}))?" /> 
  <property name="validate.version.regex" value="^(${version.number.validation.regex})$" /> 
  <property name="release.flag.regex" value="^(?:${version.number.validation.regex})$" /> 
  <property name="manifest.version.regex" value="(Bundle-Version:\s)(${version.number.search.regex})" /> 
  <property name="manifest.version.replace" value="\1${build.version}" /> 
  <property name="feature.1.version.regex" value="(<feature.*version=")(${version.number.search.regex})("\s+provider-name.*?>)" /> 
  <property name="feature.1.version.replace" value="\1${build.version}\3" /> 
  <property name="feature.2.version.regex" value="(<import feature.*version=")(${version.number.search.regex})("\s*)(match.*)?(/>)" /> 
  <property name="feature.2.version.replace" value="\1${build.version}\3\4\5" /> 
  <property name="feature.copyright.1.date.regex" value="^([ ]*Copyright.*[0-9]{4})-([0-9]{4})(.*)$" /> 
  <property name="feature.copyright.1.date.replace" value="\1-${today.year}\3" /> 
  <property name="site.1.version.regex" value="(<feature.*_)(${version.number.search.regex})(\.jar)" /> 
  <property name="site.1.version.replace" value="\1${build.version}\3" /> 
  <property name="site.2.version.regex" value="(<feature.*version=")(${version.number.search.regex})(")" /> 
  <property name="site.2.version.replace" value="\1${build.version}\3" /> 
  <property name="html.copyright.1.version.regex" value="^(Version: )(${version.number.search.regex})(.*)?" /> 
  <property name="html.copyright.1.version.replace" value="\1${build.version}\3" /> 
  <property name="html.copyright.2.version.regex" value="(Copyright:\s)([0-9]{4})" /> 
  <property name="html.copyright.2.version.replace" value="\1${today.year}" /> 
- <!--  Check for BETA or RELEASE version 
  --> 
  <propertyregex property="release.flag" input="${build.version}" regexp="${release.flag.regex}" select="\1" casesensitive="true" /> 
- <if>
  <equals arg1="${release.flag}" arg2="b" /> 
- <then>
  <echo>Building a BETA version.</echo> 
  <property name="is.beta.version" value="true" /> 
  <property name="marketplace.installation.hint.snippet" value="beta_marketplace.snippet" /> 
  <property name="beta.dir" value="${sf.ftp.beta.dir.name}" /> 
  <property name="version.info" value="<div class="beta">Beta Version - ${build.version}</div>" /> 
  <property name="ignore.build.home" value="true" /> 
  </then>
- <else>
  <echo>Building a RELEASE version.</echo> 
  <property name="is.beta.version" value="false" /> 
  <property name="marketplace.installation.hint.snippet" value="release_marketplace.snippet" /> 
  <property name="beta.dir" value="." /> 
  <property name="version.info" value="<div class="release">Release Version - ${build.version}</div>" /> 
  </else>
  </if>
- <!--  Set build target dependant parameters 
  --> 
  <property name="target.ide.product.name.short.rdi" value="RDi 9.5.1.3+" /> 
  <property name="target.ide.product.name.short.wdsci" value="WDSCi 7.0" /> 
  <property name="target.ide.product.name.long.rdi" value="IBM Rational Developer for i" /> 
  <property name="target.ide.product.name.long.wdsci" value="Websphere Development Studio Client for iSeries" /> 
  <property name="target.ide.rdi" value="rdi8.0" /> 
  <property name="target.ide.wdsci" value="wdsci7.0" /> 
- <if>
  <equals arg1="${build.target}" arg2="RDi" /> 
- <then>
  <property name="target.ide.ide.product.name.long" value="${target.ide.product.name.long.rdi}" /> 
  <property name="target.ide.ide.product.name.short" value="${target.ide.product.name.short.rdi}" /> 
  <property name="target.ide.sf.dir" value="${target.ide.rdi}" /> 
  <property name="target.ide.exclude.web.files" value="**/wdsci*.*,**/*.snippet" /> 
  <property name="target.ide.exclude.download.files" value="*wdsci*" /> 
  </then>
- <else>
  <property name="target.ide.ide.product.name.long" value="${target.ide.product.name.long.wdsci}" /> 
  <property name="target.ide.ide.product.name.short" value="${target.ide.product.name.short.wdsci}" /> 
  <property name="target.ide.sf.dir" value="${target.ide.wdsci}" /> 
  <property name="target.ide.exclude.web.files" value="**/rdi*.*,**/*.snippet" /> 
  <property name="target.ide.exclude.download.files" value="*rdi*" /> 
  </else>
  </if>
  <property name="target.ide.ide.product.full.name" value="${target.ide.product.name.long.rdi} - ${target.ide.ide.product.name.short}" /> 
  <property name="target.ide.zip.file.name" value="${build.public.project.name} for ${target.ide.ide.product.name.short} (v${build.version} Update Site).zip" /> 
  <property name="target.ide.uload.dir" value="${sf.ftp.project}/docs" /> 
- <!--  Set regular expressions and replacement values that use property "beta.dir" and "target.ide.zip.file.name" 
  --> 
  <property name="html.files.zip.regex" value="(<img id="${beta.dir}".*)(zip_file.png)(.*/files/)([a-z0-9.]+/|[A-Z@_]+/)(.*?)(">)" /> 
  <property name="html.files.zip.replace" value="\1\2\3\4${target.ide.zip.file.name}\6" /> 
  <property name="target.ide.root.update.site.url" value="${sf.update.site.url}/update-site/eclipse/${target.ide.sf.dir}" /> 
  <property name="target.ide.root.beta.update.site.url" value="${sf.update.site.url}/${sf.ftp.beta.dir.name}/update-site/eclipse/${target.ide.sf.dir}" /> 
  <property name="target.ide.root.help.site.url" value="${sf.help.url}/${sf.dir.updatesite.help.dir}/" /> 
  <property name="target.ide.root.beta.help.site.url" value="${sf.help.url}/${sf.ftp.beta.dir.name}/${sf.dir.updatesite.help.dir}/" /> 
  <property name="site.xml.property.url.regex" value="(<site)([ ]*url="\S*"[ ]*)?(>)" /> 
  <property name="site.xml.property.url.replace" value="\1 url="${target.ide.root.update.site.url}"\3" /> 
- <!--  Set common upload properties 
  --> 
  <property name="build.dir" location="./.." /> 
  <property name="build.upload.dir" location="${build.dir}/upload" /> 
- <!--  Set HTML update site properties 
  --> 
  <property name="build.template.dir" location="${build.dir}/build/templates" /> 
  <property name="build.template.dir.web" location="${build.template.dir}/template_updatesite_web" /> 
  <property name="build.template.dir.web.build_target" location="${build.template.dir.web}/eclipse/build_target" /> 
  <property name="build.template.dir.web.assets" location="${build.template.dir.web}/eclipse/build_target/assets" /> 
  <property name="build.upload.dir" location="${build.dir}/upload" /> 
  <property name="build.upload.dir.files" location="${build.upload.dir}/sf-files/${beta.dir}" /> 
  <property name="build.upload.dir.updateSite" location="${build.upload.dir}/sf-updatesite/${beta.dir}" /> 
  <property name="build.upload.dir.updateSite.eclipse" location="${build.upload.dir}/sf-updatesite/${beta.dir}/eclipse/${target.ide.sf.dir}" /> 
- <!--  was: sf-web 
  --> 
  <property name="build.upload.dir.web" location="${build.upload.dir}/sf-updatesite/${beta.dir}" /> 
  <property name="build.upload.dir.web.build.target" location="${build.upload.dir}/sf-updatesite/${beta.dir}/eclipse/build_target" /> 
  <property name="build.upload.dir.web.eclipse" location="${build.upload.dir}/sf-updatesite/${beta.dir}/eclipse/${target.ide.sf.dir}" /> 
  <property name="build.upload.dir.web.eclipse.assets" location="${build.upload.dir}/sf-updatesite/${beta.dir}/eclipse/${target.ide.sf.dir}/assets" /> 
  <property name="build.upload.dir.help" location="${build.upload.dir}/sf-help/${beta.dir}/help" /> 
  <property name="build.upload.dir.home" location="${build.upload.dir}/sf-home/" /> 
  <property name="zip.base.directory" location="${workspace.home}/${build.updatesite}" /> 
  <property name="project.doc" location="${workspace.home}/${build.project.core}/${build.folder.doc}/${build.project.doc}" /> 
  <property name="project.pdf" location="${workspace.home}/${build.project.core}/${build.folder.doc}/${build.project.pdf}" /> 
- <!--  Set the name of the default home page file 
  --> 
  <property name="home.page" value="index.html" /> 
  <property name="support.page" value="support.html" /> 
  <property name="files.page" value="files/index.html" /> 
- <!--  Set update site values 
  --> 
  <property name="updatesite.tag.file" location="${workspace.home}\${build.updatesite}\iRPGUnit Update Site v${build.version}.tag" /> 
Die XML-Seite kann nicht angezeigt werden 

Die XML-Eingabe kann nicht angezeigt werden, wenn Stylesheet XSL verwendet wird. Beheben Sie den Fehler und klicken Sie dann auf Aktualisieren oder wiederholen Sie den Vorgang später. 


--------------------------------------------------------------------------------

Im Textinhalt wurde ein ungültiges Zeichen gefunden. Fehler beim Bearbeiten der Ressource 'file:///C:/Users/traddatz/Downlo...

       Alle alten Dateien werden 

>
- <!--  Check what shall be build 
  --> 
- <if>
  <equals arg1="${build.help.enabled}" arg2="true" /> 
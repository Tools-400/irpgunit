      // ==========================================================================
      //  iRPGUnit - Create Cobol Unit Test Suite CPP.
      // ==========================================================================
      //  Copyright (c) 2013-2019 iRPGUnit Project Team
      //  All rights reserved. This program and the accompanying materials
      //  are made available under the terms of the Common Public License v1.0
      //  which accompanies this distribution, and is available at
      //  http://www.eclipse.org/legal/cpl-v10.html
      // ==========================================================================
      // >>PRE-COMPILER<<
      //   >>CRTCMD<<  CRTRPGMOD MODULE(&LI/&OB) SRCFILE(&SL/&SF) SRCMBR(&SM);
      //   >>IMPORTANT<<
      //     >>PARM<<  OPTION(*EVENTF);
      //     >>PARM<<  DBGVIEW(*LIST);
      //   >>END-IMPORTANT<<
      //   >>EXECUTE<<
      // >>END-PRE-COMPILER<<
      // ==========================================================================

      /include qinclude,H_SPEC
      /include qinclude,COPYRIGHT


      //----------------------------------------------------------------------
      //   IMPORTS
      //----------------------------------------------------------------------

      /include qinclude,CRTTST
      /include qinclude,PGMMSG
      /include qinclude,TEMPLATES
      /include qinclude,TESTUTILS


      //----------------------------------------------------------------------
      //   MAIN PROGRAM
      //----------------------------------------------------------------------

     D crtCbl...
     D                 pr
     D  testPgm                            const likeds(Object_t)
     D  srcFile                            const likeds(Object_t)
     D  srcMbr                             const like(SrcMbr_t.mbr)
     D  text                               const like(Text_t)
     D  cOption                            const likeds(Options_t)
     D  dbgView                            const like(DbgView_t)
     D  bndSrvPgm                          const likeds(ObjectArray_t)
     D  bndDir                             const likeds(ObjectArray_t)
     D  bOption                            const likeds(Options_t)
     D  dltSplf                            const like(yesNo_t)
     D  actGrp                             const like(ActivationGroup_t)
     D  bModules                           const likeds(ObjectArray_t)
     D  pOption                            const likeds(Options_t)
     D  compileOpt                 5000a   const varying options(*varsize)
     D  targetRls                          const like(TargetRelease_t)

     D crtCbl...
     D                 pi
     D  testPgm                            const likeds(Object_t)
     D  srcFile                            const likeds(Object_t)
     D  srcMbr                             const like(SrcMbr_t.mbr)
     D  text                               const like(Text_t)
     D  cOption                            const likeds(Options_t)
     D  dbgView                            const like(DbgView_t)
     D  bndSrvPgm                          const likeds(ObjectArray_t)
     D  bndDir                             const likeds(ObjectArray_t)
     D  bOption                            const likeds(Options_t)
     D  dltSplf                            const like(yesNo_t)
     D  actGrp                             const like(ActivationGroup_t)
     D  bModules                           const likeds(ObjectArray_t)
     D  pOption                            const likeds(Options_t)
     D  compileOpt                 5000a   const varying options(*varsize)
     D  targetRls                          const like(TargetRelease_t)

     D srcMbrRslv      s                   like(srcMbr)
     D srcType         s             10a
      /free

       if (srcMbr = '*TSTPGM');
         srcMbrRslv = testPgm.nm;
       else;
         srcMbrRslv = srcMbr;
       endif;

       monitor;
         srcType = getMemberType( srcFile.nm : srcFile.lib : srcMbrRslv );
       on-error;
         sndEscapeMsgAboveCtlBdy( 'Could not retrieve source type of member '
                                + %trim(srcMbrRslv)
                                + ' of file '
                                + %trim(srcFile.lib) + '/' + %trim(srcFile.nm)
                                + '.' );
       endmon;

       if (srcType <> MBR_CBLLE and srcType <> MBR_SQLCBLLE );
         sndEscapeMsgAboveCtlBdy( 'Source type ' + %trim(srcType)
                                + ' is not supported by command RUCRTCBL' );
       endif;

       crtTst( testPgm : srcFile : srcMbrRslv : text : cOption : dbgView
              : bndSrvPgm : bndDir : bOption : dltSplf : actGrp : bModules
              : '*N' : pOption : compileOpt : targetRls);

       *inlr = *on;

      /end-free

